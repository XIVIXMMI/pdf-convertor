plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
}

group = 'com.lazydev'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // JavaFX (handled by JavaFX plugin)
    
    // Apache PDFBox
    implementation 'org.apache.pdfbox:pdfbox:2.0.29'
    
    // Apache POI
    implementation 'org.apache.poi:poi:5.2.5'
    implementation 'org.apache.poi:poi-ooxml:5.2.5'
    
    // Logging
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

javafx {
    version = '17.0.13'
    modules = ['javafx.controls', 'javafx.fxml']
}

application {
    mainClass = 'com.omori.pdfconvertor.Main'
    applicationDefaultJvmArgs = [
        '-Dfile.encoding=UTF-8',
        '-Djava.awt.headless=false'
    ]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'PDFConverter'
    }
}

test {
    useJUnitPlatform()
}

// Create distribution archives
distributions {
    main {
        distributionBaseName = 'PDFConverter'
    }
}

// Custom task for creating a fat JAR with JavaFX dependencies
task fatJar(type: Jar) {
    archiveClassifier = 'fat'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    manifest {
        attributes 'Main-Class': 'com.omori.pdfconvertor.Main'
    }
    
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}